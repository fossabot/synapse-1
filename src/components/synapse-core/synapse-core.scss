// @import "~src/utilities/utils.scss";

$synBlue: #4A90E2;
$synTurqoise: #50E3C2;
$bodyColor: #192946;

$cardWidth: 186px;
$cardHeight: 100px;

$cardOffsetX: -calc($cardWidth +15px);
$cardOffsetY: -calc($cardHeight +15px);

$cardShadowOffsetX: -calc($cardWidth +19px);
$cardShadowOffsetY: -calc($cardHeight +19px);

$cardExpandedWidth: 380px;
$cardExpandedHeight: 260px;

$cardExpandedWidthOffsetX: -calc($cardExpandedWidth +15px);
$cardExpandedWidthOffsetY: -calc($cardExpandedHeight +15px);

html,
body {
	padding: 0;
	margin: 0;
}

body {
	background-color: $bodyColor;
}

.circle-bg {
	background: rgba($bodyColor, 5%);
	height: 100vh;
	width: 100vw;
	border-radius: 50%;
}

.canvas {
	background-color: $bodyColor;
	cursor: default;
	user-select: none;
	overflow: visible;
	display: block;
}

.blurred {
	filter: url('#blur');
}

.link {
	fill: none;
	stroke: rgba($synBlue, 0.7);
	stroke-width: 4px;
	cursor: -webkit-grabbing;
}


.link.selected {
	stroke-dasharray: 10,2;
}

.link.dragline {
	pointer-events: none;
}

.link.hidden {
	stroke-width: 0;
}

/* cursors */

.dragline:hover {
	cursor: pointer;
}

.syn:active,
.syn:active:hover {
	cursor: -webkit-grabbing;
}

.syn.syn-expanded:active,
.syn.syn-expanded:active:hover  {
	cursor: text;
}

.card-node:active,
.dragline:active,
.dragline,
.linking  {
	cursor: -webkit-grabbing;
}

.card-node:hover,
.card-node-shadow:hover,
.card-node,
.card-node-shadow,
.card-action {
	cursor: pointer;
}


.syn:hover {
	cursor: -webkit-grab;
}

.linking .syn:hover,
.linking .syn:hover .card-input,
.linking .syn:hover .card,
.linking .syn:hover .card-html-wrap,
.linking .syn:hover .card-html-wrap:hover {
	cursor: pointer;
}
/**/


.card,
.card-html-wrap,
.card-node,
.card-node-shadow,
.card-corner,
.card-node-tri  {
	transition: 0.3s;
}

.syn {

}

.card {
	border: none;
	border-top-left-radius: 5px;
	border-top-right-radius: 5px;
	border-bottom-left-radius: 5px;
	box-shadow: 0 0 0px 5px rgba($bodyColor, 0.1%);
	pointer-events: none;
	background: rgba(255,255,255,1);
	margin: 0;
	padding-left: 20px;
	padding-top: 10px;
	padding-right: 10px;
	width: $cardWidth;
	height: $cardHeight;	
	resize: none;
	font-size: 18px;
	line-height: 24px;
	overflow: hidden;
	font-weight: 300;
	box-sizing: border-box;
}

.card:focus {
	outline: none;
}

.card-html-wrap {
	overflow: visible;
}

.card-corner {
	transform: translate(-26px, -26px);
}

.card-node {
	transform: scale(0);
	fill: rgba(0,0,0,0);
}

.card-node-shadow {
	fill: $synBlue;
}

.card-node-tri {
	fill: $bodyColor;
	transform: translate(0px, 0px) scale(0);
}

.card-action {
	transform: translate(-200px, -93px) scale(1);
	transition: 0.35s;
	fill: $synBlue;
	stroke-width: 3px;
	stroke: $bodyColor;
}

// synapse hover state
.syn:hover {

	& .card-node {
		transform: scale(2.75);
	}

	& .card-node-shadow {
		transform: scale(2.5);
		fill: $synTurqoise;
	}

	& .card-action {
		transform: translate(-230px, -93px) scale(1.3);
		animation-timing-function: linear;
		fill: $bodyColor;
		stroke-width: 7px;
		stroke: $synTurqoise;
	}

	& .card-node-tri {
		transform: translate(-10px, -8px) scale(1);
	}

}

// synapse pressing state
.syn:active  {

	& .card-html-wrap {
		transform: scale(0.95);
	}

}

// synapse expanded state
.syn-expanded {

	& .card-html-wrap {

	}

	& .card {
		width: $cardExpandedWidth;
		height: $cardExpandedHeight;
		font-size: 33px;
	    line-height: 45px;
	    pointer-events: all;
	}

	& .card-node-shadow {
		transform: scale(0.7);
	}

	& .card-node {
		display: none;
	}

	&:active {
		& .card-html-wrap {
			transform: scale(1);
		}
	}


	&:hover {
		& .card-node-tri {
			transform: translate(0px, 0px) scale(0);
		}

		& .card-node-shadow {
			transform: scale(0.7);
			fill: $synBlue;
		}

		& .card-action  {
			transform: translate(-440px,-235px) scale(1.5);
			animation: none;
			fill: #fff;
			stroke: none;
			stroke-width: 10px;
			stroke: $synBlue;
		}
	}

	& .card-action  {
		transform: translate(-440px,-235px) scale(1.5);
		animation: none;
		fill: #fff;
		stroke: none;
		stroke-width: 10px;
		stroke: $synBlue;
	}

}

// synapse linking state
.linking {

	& .syn:hover {

		& .card-html-wrap {
			transform: scale(1.03);
		}

		& .card-node-tri  {
			transform: translate(0px, 0px) scale(0);
		}

		& .card-node {
			transform: scale(0);
		}

		& .card-node-shadow {
			transform: scale(1);
			fill: $synTurqoise;
		}

		& .card-action {
			transform: translate(-205px, -95px) scale(1);
			transition: 0.35s;
			fill: $synBlue;
			stroke-width: 3px;
			stroke: $bodyColor;
		}

		&.syn-expanded .card-action  {
			transform: translate(-440px,-235px) scale(1.5);
			animation: none;
			fill: #fff;
			stroke: none;
			stroke-width: 10px;
			stroke: $synBlue;
		}
	}
}

@keyframes card-appear {
	0% {
		opacity: 0;
	}

	100% {
		opacity: 1;
	}

}
